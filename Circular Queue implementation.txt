#include<stdio.h>
#define max 10

int queue[max];
int front=-1,rear=-1;

void enqueue();
void dequeue();
void display();
void main()
{
    int ch,d,y;
    do
    {
       printf("Enter choices:\n") ;
       printf("1.enqueue\n2.dequeue\n3.display\n");
       scanf("%d",&ch);
       switch(ch)
       {
           case 1:
           enqueue();
           break;
           
           case 2:
           dequeue();
           break;
           
           case 3:
           printf("Enter Data is\n ");
           display();
           break;
           
           
       }
        printf("Do you want to continue?\n");
        scanf("%d",&y);
       
    } while(y==1);
}

  void enqueue()
  {
      int element;
      printf("Enter element:\n");
      scanf("%d",&element);
      if(((rear+1)%max==front)||(rear==max-1 && front==0))   //To check queue is full or not
      {
          printf("queue is full");
          return ;
         
      }
      else if(rear==-1)   //To Check whether queue is empty
      {
          front=rear=0;
          queue[rear]=element;
         
      }
      else
      {
          rear=(rear+1)%max;   //for other conditions
          queue[rear]=element;
      }
     
  }
 
  void dequeue()
  {
      if(front==-1)
      {
          printf("\nempty");
          return;
      }
     
      else if(front==rear)
      {
          front=rear=-1;
      }
      else
      {
          front=(front+1)%max;
         
      }
  }
 
  void display()
  {
      if(rear>front)
      {
          for(int i=front;i<=rear;i++)   
          {
              printf("%d ", queue[i]);
          }
         
        }  
          else
             {
                 for(int i=front;i<max;i++)
               {
                  printf("%d ", queue[i]);
                 
               }
         
           for(int i=0;i<=rear;i++)
            {
               printf("%d ", queue[i]);
            }
          }
     
  }

